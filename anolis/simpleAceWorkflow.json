{
    "inputs": [
        {
            "type": "tree",
            "name": "tree",
            "format": "r.apetree",
            "x": 33,
            "y": 1
        },
        {
            "type": "table",
            "name": "table",
            "format": "r.dataframe",
            "x": 98,
            "y": 70
        },
        {
            "default": "island",
            "domain": {
                "input": "table",
                "format": "column.names"
            },
            "type": "string",
            "name": "column",
            "format": "text",
            "x": 31,
            "y": 184
        },
        {
            "default": "discrete",
            "domain": [
                "discrete",
                "continuous"
            ],
            "type": "string",
            "name": "type",
            "format": "text",
            "x": 117,
            "y": 238
        },
        {
            "default": "marginal",
            "domain": [
                "marginal"
            ],
            "type": "string",
            "name": "method",
            "format": "text",
            "x": 195,
            "y": 298
        }
    ],
    "name": "simpleAceWorkflow",
    "outputs": [
        {
            "type": "table",
            "name": "res",
            "format": "r.dataframe",
            "x": 764,
            "y": 59
        },
        {
            "type": "image",
            "name": "treePlot",
            "format": "png.base64",
            "x": 773,
            "y": 199
        }
    ],
    "connections": [
        {
            "name": "tree",
            "input_step": "aceArbor",
            "input": "tree"
        },
        {
            "name": "table",
            "input_step": "aceArbor",
            "input": "table"
        },
        {
            "name": "column",
            "input_step": "aceArbor",
            "input": "column"
        },
        {
            "name": "type",
            "input_step": "aceArbor",
            "input": "type"
        },
        {
            "name": "method",
            "input_step": "aceArbor",
            "input": "method"
        },
        {
            "name": "res",
            "output_step": "aceArbor",
            "output": "res"
        },
        {
            "name": "treePlot",
            "output_step": "aceArbor",
            "output": "treePlot"
        }
    ],
    "steps": [
        {
            "x": 433,
            "y": 55,
            "id": "aceArbor",
            "analysis": {
                "inputs": [
                    {
                        "type": "tree",
                        "name": "tree",
                        "format": "r.apetree"
                    },
                    {
                        "type": "table",
                        "name": "table",
                        "format": "r.dataframe"
                    },
                    {
                        "default": "island",
                        "domain": {
                            "input": "table",
                            "format": "column.names"
                        },
                        "type": "string",
                        "name": "column",
                        "format": "text"
                    },
                    {
                        "default": "discrete",
                        "domain": [
                            "discrete",
                            "continuous"
                        ],
                        "type": "string",
                        "name": "type",
                        "format": "text"
                    },
                    {
                        "default": "marginal",
                        "domain": [
                            "marginal"
                        ],
                        "type": "string",
                        "name": "method",
                        "format": "text"
                    }
                ],
                "script": "library(devtools)\nlibrary(cardoonTools)\n#options(repos=\"http://cran.cnr.Berkeley.edu\")\n#install_github(\"aRbor\", \"arborworkflows\")\nrequire(aRbor)\n\n# Removed this parameter to restore automated use of the analyses from Easy Mode apps\nfont_size <- 1\n\ntd<-make.treedata(tree, table, name_column=0)\nif(column==\"alldiscrete\"){\n  res <- aceArbor(td, charType=type, aceType=method)\n} else {\n  td1 <- select(td, which(colnames(td$dat)==column))\n  res <- aceArbor(td1, charType=type, aceType=method)\n}\n\nTH <- max(branching.times(td$phy))\n\n#if(type==\"discrete\"){\n#  plot.ace <- function(td, x, ...){\n#    cols <- rainbow(ncol(x))\n#    plot(td$phy, cex=font_size, label.offset=0.02*TH,...)\n#    nodelabels(pie=x, cex=0.5, piecol=cols)\n#    tiplabels(pch=21, bg=cols[as.numeric(td$dat[,column])])\n#  }\n#} \n\n#if(type==\"continuous\"){\n#  plot.ace <- function(td, x, ...){\n#    z <- c(x[[1]][,2], setNames(td$dat[,column], rownames(td$dat)))\n#    phenogram(td$phy, z, fsize=font_size, ...)\n#  }\n#} \n\ntreePlot <- cardoonPlot(expression(plot(res, label.offset=0.05*TH)), width=1000, height=1000, res=100)\ntreePlot <- treePlot$png",
                "mode": "r",
                "name": "aceArbor",
                "outputs": [
                    {
                        "type": "table",
                        "name": "res",
                        "format": "r.dataframe"
                    },
                    {
                        "type": "image",
                        "name": "treePlot",
                        "format": "png.base64"
                    }
                ]
            }
        }
    ],
    "mode": "workflow"
}